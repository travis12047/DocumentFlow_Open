@model DocumentFlow.Models.ViewModel.DocCreateViewModel

@{
    ViewData["Title"] = "DocCreate";
    
    var selectListItems = Model.selectListItems;
    var approvalUserNameCombo = Model.approvalUserNameCombo;

}

            <script>

                //SelectBoxで選択されている
                //フロー名のフローIDに紐づく詳細情報(ユーザ情報)を表示
                function ChangeList() {

                    let userTable = document.getElementById("approvalFlowComboTable");
                    
                    //詳細情報(ユーザ情報)が表示されている場合削除
                    if(userTable.firstElementChild != null){
                        let remove_element = userTable.removeChild(userTable.firstElementChild);
                    }

                    //SelectBoxの選択項目が空かどうか確認
                    let selectList = document.getElementById("selectList");
                    var flowId = selectList.value;
                    if(!(flowId == null || flowId == "")){

                        //フロー名のフローIDに紐づく詳細情報(ユーザ情報)を
                        //フローID単位で配列化
                        var userNameCombo = null;
                        var userNameDetail = null;
                        userNameCombo = [];
                        @{
                            foreach(var userNameDetail in approvalUserNameCombo)
                            {
                                @:userNameDetail = [];
                                foreach (var userName in userNameDetail)
                                {
                                    
                                    @:userNameDetail.push('@userName');
                                }
                                @:userNameCombo.push(userNameDetail);
                            }
                        }
                        
                        //SelectBoxで選択されている
                        //フロー名のフローIDに紐づく詳細情報(ユーザ情報)を表示
                        var userTableTbody = userTable.createTBody();
                        
                        var newRow  = null;
                        var newCell = null;
                        var newText = null;

                        var selected = selectList.selectedIndex;
                        selected--;
                        for(var i = 0; i < userNameCombo[selected].length; i++){
                        
                            newRow  = null;
                            newCell = null;
                            newText = null;

                            newRow = userTableTbody.insertRow();
                            newCell = newRow.insertCell();
                            newText = document.createTextNode(userNameCombo[selected][i]);
                            newCell.appendChild(newText);
                        }
                    }
                }

                //入力チェック
                //タイトルと内容が入力されている場合のみsbmitする
                function InputCheck(){
                    
                    var flowId = document.getElementById("selectList").value;

                    if (createForm.title.value == "" || createForm.content.value == ""){
                        alert("タイトルと内容を入力して下さい");    //エラーメッセージを出力
                        return false;    //送信ボタン本来の動作をキャンセルします
                    }else if(flowId == null || flowId == ""){
                        alert("承認フローを選択してください");    //エラーメッセージを出力
                        return false;    //送信ボタン本来の動作をキャンセルします
                    }else{
                        return true;    //送信ボタン本来の動作を実行します
                    }
                }

            </script>

<h1>DocCreate</h1>

<h4>DocCreate</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" name="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <p>タイトル：<br>
	        @*<input type="text" asp-for="docTitle" name="@Model.docTitle" style="width:60%;"></p>*@
	        <input type="text" asp-for="docTitle" style="width:60%;"></p>
            <p>内容：
            <textarea asp-for="docContent" style="width:100%;"></textarea></p>

            <select asp-for="selectFlow"
                asp-items="@Model.selectListItems" id="selectList" onchange="ChangeList()"></select>
            

            <table id="approvalFlowComboTable">
                <tbody>
                    <tr></tr>
                </tbody>
            </table>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" onclick="return InputCheck()"/>
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
